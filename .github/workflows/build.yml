
name: build
on:
  workflow_dispatch:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  schedule:
    #- cron: '5 1 * * 6'
    #- cron: '5 1 * * 2,4'
    #- cron: '5 1 * * 2'
    - cron: '5 1 * * 4'

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_lts:
    runs-on: ubuntu-latest
    #runs-on: ubuntu-20.04
    #runs-on: buildjet-2vcpu-ubuntu-2004
    #runs-on: buildjet-64vcpu-ubuntu-2004
    steps:
    - uses: actions/checkout@v2
    - name: _getMinimal_cloud
      shell: bash
      run: |
        ./ubiquitous_bash.sh _getMinimal_cloud
      timeout-minutes: 90
    - name: _build_cloud_lts
      shell: bash
      run: |
        ./ubiquitous_bash.sh _build_cloud_prepare
        ./ubiquitous_bash.sh _build_cloud_lts
      timeout-minutes: 180
    - name: _export_cloud_lts
      shell: bash
      run: |
        ./ubiquitous_bash.sh _export_cloud_lts
      timeout-minutes: 90
    - name: release! linux-lts-amd64-debian
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
        name: build
        files: |
          ./_local/_export/linux-lts-amd64-debian.tar.gz
      timeout-minutes: 45
  build_mainline:
    runs-on: ubuntu-latest
    #runs-on: ubuntu-20.04
    #runs-on: buildjet-2vcpu-ubuntu-2004
    #runs-on: buildjet-64vcpu-ubuntu-2004
    steps:
    - uses: actions/checkout@v2
    - name: _getMinimal_cloud
      shell: bash
      run: |
        ./ubiquitous_bash.sh _getMinimal_cloud
      timeout-minutes: 90
    - name: _build_cloud_mainline
      shell: bash
      run: |
        ./ubiquitous_bash.sh _build_cloud_prepare
        ./ubiquitous_bash.sh _build_cloud_mainline
      timeout-minutes: 180
    - name: _export_cloud_mainline
      shell: bash
      run: |
        ./ubiquitous_bash.sh _export_cloud_mainline
      timeout-minutes: 90
    # https://github.com/marketplace/actions/debugging-with-tmate
    # $RUNNER_WORKSPACE
    # rclone config --config="/rclone.conf"
    # sudo touch /continue
    # bash -i
    # source ~/.bashrc
    # Type 'q' at the 'Web shell' or use SSH .
    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3
      # ssh -i <path-to-key> <tmate-connection-string>
      with:
        limit-access-to-actor: true
      timeout-minutes: 5
    - name: release! linux-mainline-amd64-debian
      uses: softprops/action-gh-release@v1
      with:
        tag_name: build-${{ github.run_id }}-${{ github.run_attempt }}
        name: build
        files: |
         ./_local/_export/linux-mainline-amd64-debian.tar.gz
      timeout-minutes: 45






