
name: check


# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none



on:
  workflow_dispatch:
    inputs:
      runnerName:
        required: false
        default: ubuntu-latest
        type: choice
        options:
        - ubuntu-latest
        - ubuntu-latest-m
        - ubuntu-latest-h
      forceKernel_mainline:
        required: false
        default: latest
        type: choice
        options:
        - latest
        - 6.5.
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
  schedule:
    #- cron: '5 1 * * 6'
    #- cron: '5 1 * * 2,4'
    #- cron: '5 1 * * 2'
    - cron: '5 1 * * 4'

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check_lts:
    runs-on: ubuntu-latest
    #runs-on: ubuntu-20.04
    #runs-on: buildjet-2vcpu-ubuntu-2004
    #runs-on: buildjet-64vcpu-ubuntu-2004
    steps:
    - name: users
      shell: bash
      run: |
        sudo -u ubuntu -n bash -c 'sudo -n useradd runner --non-unique -u $UID -g $UID' || true
        sudo -u ubuntu -n bash -c 'sudo -n groupadd runner --non-unique -g $UID' || true
        sudo -u runner -n bash -c 'sudo -n echo $USER $UID' || true
        true
      # Apparently may increase buildJet 'runner' to 77GB (instead of 61GB).
      # Apparently may increase Github Actions 'runner' to 59GB (instead of 31GB) .
    - name: Maximize build space
      if: ${{ github.event.inputs.runnerName == 'ubuntu-latest' }}
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 1625
        temp-reserve-mb: 50
        swap-size-mb: 2
        #remove-dotnet: ${{ github.event.inputs.runnerName != 'ubuntu-latest-h' }}
        remove-dotnet: 'true'
        #remove-android: ${{ github.event.inputs.runnerName != 'ubuntu-latest-h' }}
        remove-android: 'true'
        #remove-haskell: ${{ github.event.inputs.runnerName != 'ubuntu-latest-h' }}
        remove-haskell: 'true'
        #remove-codeql: ${{ github.event.inputs.runnerName != 'ubuntu-latest-h' }}
        remove-codeql: 'true'
        #remove-docker-images: ${{ github.event.inputs.runnerName != 'ubuntu-latest-h' }}
        remove-docker-images: 'true'
    - uses: actions/checkout@v2
    - name: _getMinimal_cloud
      shell: bash
      run: |
        ./ubiquitous_bash.sh _getMinimal_cloud
      timeout-minutes: 90



  check_mainline:
    runs-on: ${{ github.event.inputs.runnerName == '' && 'ubuntu-latest' || github.event.inputs.runnerName }}
    #runs-on: ubuntu-20.04
    #runs-on: buildjet-2vcpu-ubuntu-2004
    #runs-on: buildjet-64vcpu-ubuntu-2004
    steps:
    - name: users
      shell: bash
      run: |
        sudo -u ubuntu -n bash -c 'sudo -n useradd runner --non-unique -u $UID -g $UID' || true
        sudo -u ubuntu -n bash -c 'sudo -n groupadd runner --non-unique -g $UID' || true
        sudo -u runner -n bash -c 'sudo -n echo $USER $UID' || true
        true
      # Apparently may increase buildJet 'runner' to 77GB (instead of 61GB).
      # Apparently may increase Github Actions 'runner' to 59GB (instead of 31GB) .
    - name: Maximize build space
      if: ${{ github.event.inputs.runnerName == 'ubuntu-latest' }}
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 1625
        temp-reserve-mb: 50
        swap-size-mb: 2
        #remove-dotnet: ${{ github.event.inputs.runnerName != 'ubuntu-latest-h' }}
        remove-dotnet: 'true'
        #remove-android: ${{ github.event.inputs.runnerName != 'ubuntu-latest-h' }}
        remove-android: 'true'
        #remove-haskell: ${{ github.event.inputs.runnerName != 'ubuntu-latest-h' }}
        remove-haskell: 'true'
        #remove-codeql: ${{ github.event.inputs.runnerName != 'ubuntu-latest-h' }}
        remove-codeql: 'true'
        #remove-docker-images: ${{ github.event.inputs.runnerName != 'ubuntu-latest-h' }}
        remove-docker-images: 'true'
    - uses: actions/checkout@v2
    - name: _getMinimal_cloud
      shell: bash
      run: |
        ./ubiquitous_bash.sh _getMinimal_cloud
      timeout-minutes: 90
    - name: _fetchKernel-mainline
      shell: bash
      run: |
        [[ "${{ github.event.inputs.forceKernel_mainline }}" != "" ]] && [[ "${{ github.event.inputs.forceKernel_mainline }}" != "latest" ]] && export forceKernel_mainline="${{ github.event.inputs.forceKernel_mainline }}"
        #./ubiquitous_bash.sh _fetchKernel-mainline
        ./ubiquitous_bash.sh _fetchKernel-mainline-legacyHTTPS
    - name: _build_cloud_mainline
      shell: bash
      run: |
        [[ "${{ github.event.inputs.forceKernel_mainline }}" != "" ]] && [[ "${{ github.event.inputs.forceKernel_mainline }}" != "latest" ]] && export forceKernel_mainline="${{ github.event.inputs.forceKernel_mainline }}"
        export current_keepFetch="true"
        ./ubiquitous_bash.sh _build_cloud_prepare
        ./ubiquitous_bash.sh _build_cloud_mainline
      timeout-minutes: 300
    #- name: _export_cloud_mainline
      #shell: bash
      #run: |
        #./ubiquitous_bash.sh _export_cloud_mainline
      #timeout-minutes: 90
    # https://github.com/marketplace/actions/debugging-with-tmate
    # $RUNNER_WORKSPACE
    # rclone config --config="/rclone.conf"
    # sudo touch /continue
    # bash -i
    # source ~/.bashrc
    # Type 'q' at the 'Web shell' or use SSH .
    #- name: Setup tmate session
      #if: ${{ failure() }}
      #uses: mxschmitt/action-tmate@v3
      ## ssh -i <path-to-key> <tmate-connection-string>
      #with:
        #limit-access-to-actor: true
      #timeout-minutes: 5
    #- name: artifacts
      #uses: actions/upload-artifact@v3
      #with:
        #name: build-mainline
        #path: |
          #./_local/_export/linux-mainline-amd64-debian.tar.gz
      #timeout-minutes: 90
    - name: _check_nv-mainline-series535p
      shell: bash
      run: |
        ./ubiquitous_bash.sh _check_nv-mainline-series535p
      timeout-minutes: 300


    # For vbox kernel module make .
    - name: _getMost_ubuntu22-VBoxManage
      shell: bash
      run: |
        #! ./ubiquitous_bash.sh _getMost && exit 1
        #true
        #! sudo -n apt-get -y clean && exit 1
        #! ./ubiquitous_bash.sh _getMost_debian11_aptSources && exit 1
        #sudo -n apt-get update
        #! sudo -n apt-get -d install -y virtualbox-7.0 && exit 1
        ! sudo -n ./ubiquitous_bash.sh _getMost_ubuntu22-VBoxManage && exit 1
        df -h
        df -h /


    - name: _check_vbox-mainline
      shell: bash
      run: |
        ./ubiquitous_bash.sh _check_vbox-mainline
      timeout-minutes: 300




